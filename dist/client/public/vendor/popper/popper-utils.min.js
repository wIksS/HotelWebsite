'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 Copyright (C) Federico Zivolo 2018
 Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).
 */function a(a, b) {
  if (1 !== a.nodeType) return [];var c = getComputedStyle(a, null);return b ? c[b] : c;
}function b(a) {
  return 'HTML' === a.nodeName ? a : a.parentNode || a.host;
}function c(d) {
  if (!d) return document.body;switch (d.nodeName) {case 'HTML':case 'BODY':
      return d.ownerDocument.body;case '#document':
      return d.body;}
  var _a = a(d),
      e = _a.overflow,
      f = _a.overflowX,
      g = _a.overflowY;

  return (/(auto|scroll|overlay)/.test(e + g + f) ? d : c(b(d))
  );
}var d = {};var e = function e() {
  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'all';
  return (a = a.toString(), d.hasOwnProperty(a)) ? d[a] : ('11' === a ? d[a] = -1 !== navigator.userAgent.indexOf('Trident') : '10' === a ? d[a] = -1 !== navigator.appVersion.indexOf('MSIE 10') : 'all' === a ? d[a] = -1 !== navigator.userAgent.indexOf('Trident') || -1 !== navigator.userAgent.indexOf('MSIE') : void 0, d.all = d.all || Object.keys(d).some(function (a) {
    return d[a];
  }), d[a]);
};function f(b) {
  if (!b) return document.documentElement;var c = e(10) ? document.body : null;var d = b.offsetParent;for (; d === c && b.nextElementSibling;) {
    d = (b = b.nextElementSibling).offsetParent;
  }var g = d && d.nodeName;return g && 'BODY' !== g && 'HTML' !== g ? -1 !== ['TD', 'TABLE'].indexOf(d.nodeName) && 'static' === a(d, 'position') ? f(d) : d : b ? b.ownerDocument.documentElement : document.documentElement;
}function g(a) {
  var b = a.nodeName;
  return 'BODY' !== b && ('HTML' === b || f(a.firstElementChild) === a);
}function h(a) {
  return null === a.parentNode ? a : h(a.parentNode);
}function i(a, b) {
  if (!a || !a.nodeType || !b || !b.nodeType) return document.documentElement;var c = a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING,
      d = c ? a : b,
      e = c ? b : a,
      j = document.createRange();j.setStart(d, 0), j.setEnd(e, 0);var k = j.commonAncestorContainer;
  if (a !== k && b !== k || d.contains(e)) return g(k) ? k : f(k);var l = h(a);return l.host ? i(l.host, b) : i(a, h(b).host);
}function j(a) {
  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
  var c = 'top' === b ? 'scrollTop' : 'scrollLeft',
      d = a.nodeName;if ('BODY' === d || 'HTML' === d) {
    var _b = a.ownerDocument.documentElement,
        _d = a.ownerDocument.scrollingElement || _b;return _d[c];
  }return a[c];
}function k(a, b) {
  var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
  var d = j(b, 'top'),
      e = j(b, 'left'),
      f = c ? -1 : 1;return a.top += d * f, a.bottom += d * f, a.left += e * f, a.right += e * f, a;
}function l(a, b) {
  var c = 'x' === b ? 'Left' : 'Top',
      d = 'Left' == c ? 'Right' : 'Bottom';return parseFloat(a['border' + c + 'Width'], 10) + parseFloat(a['border' + d + 'Width'], 10);
}function m(a, b, c, d) {
  return Math.max(b['offset' + a], b['scroll' + a], c['client' + a], c['offset' + a], c['scroll' + a], e(10) ? c['offset' + a] + d['margin' + ('Height' === a ? 'Top' : 'Left')] + d['margin' + ('Height' === a ? 'Bottom' : 'Right')] : 0);
}function n() {
  var a = document.body,
      b = document.documentElement,
      c = e(10) && getComputedStyle(b);return { height: m('Height', a, b, c), width: m('Width', a, b, c) };
}var o = Object.assign || function (a) {
  for (var b, c = 1; c < arguments.length; c++) {
    for (var d in b = arguments[c], b) {
      Object.prototype.hasOwnProperty.call(b, d) && (a[d] = b[d]);
    }
  }return a;
};function p(a) {
  return o({}, a, { right: a.left + a.width, bottom: a.top + a.height });
}function q(b) {
  var c = {};try {
    if (e(10)) {
      c = b.getBoundingClientRect();var _a2 = j(b, 'top'),
          _d2 = j(b, 'left');c.top += _a2, c.left += _d2, c.bottom += _a2, c.right += _d2;
    } else c = b.getBoundingClientRect();
  } catch (a) {}var d = { left: c.left, top: c.top, width: c.right - c.left, height: c.bottom - c.top },
      f = 'HTML' === b.nodeName ? n() : {},
      g = f.width || b.clientWidth || d.right - d.left,
      h = f.height || b.clientHeight || d.bottom - d.top;var i = b.offsetWidth - g,
      k = b.offsetHeight - h;if (i || k) {
    var _c = a(b);i -= l(_c, 'x'), k -= l(_c, 'y'), d.width -= i, d.height -= k;
  }return p(d);
}function r(b, d) {
  var f = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
  var g = Math.max;var h = e(10),
      i = 'HTML' === d.nodeName,
      j = q(b),
      l = q(d),
      m = c(b),
      n = a(d),
      o = parseFloat(n.borderTopWidth, 10),
      r = parseFloat(n.borderLeftWidth, 10);f && 'HTML' === d.nodeName && (l.top = g(l.top, 0), l.left = g(l.left, 0));var s = p({ top: j.top - l.top - o, left: j.left - l.left - r, width: j.width, height: j.height });if (s.marginTop = 0, s.marginLeft = 0, !h && i) {
    var _a3 = parseFloat(n.marginTop, 10),
        _b2 = parseFloat(n.marginLeft, 10);s.top -= o - _a3, s.bottom -= o - _a3, s.left -= r - _b2, s.right -= r - _b2, s.marginTop = _a3, s.marginLeft = _b2;
  }return (h && !f ? d.contains(m) : d === m && 'BODY' !== m.nodeName) && (s = k(s, d)), s;
}function s(a) {
  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
  var c = Math.max;var d = a.ownerDocument.documentElement,
      e = r(a, d),
      f = c(d.clientWidth, window.innerWidth || 0),
      g = c(d.clientHeight, window.innerHeight || 0),
      h = b ? 0 : j(d),
      i = b ? 0 : j(d, 'left'),
      k = { top: h - e.top + e.marginTop, left: i - e.left + e.marginLeft, width: f, height: g };return p(k);
}function t(c) {
  var d = c.nodeName;return 'BODY' === d || 'HTML' === d ? !1 : !('fixed' !== a(c, 'position')) || t(b(c));
}function u(b) {
  if (!b || !b.parentElement || e()) return document.documentElement;var c = b.parentElement;for (; c && 'none' === a(c, 'transform');) {
    c = c.parentElement;
  }return c || document.documentElement;
}function v(a, d, e, f) {
  var g = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !1;
  var h = { top: 0, left: 0 };var j = g ? u(a) : i(a, d);if ('viewport' === f) h = s(j, g);else {
    var _e = void 0;'scrollParent' === f ? (_e = c(b(d)), 'BODY' === _e.nodeName && (_e = a.ownerDocument.documentElement)) : 'window' === f ? _e = a.ownerDocument.documentElement : _e = f;var _i = r(_e, j, g);if ('HTML' === _e.nodeName && !t(j)) {
      var _n = n(),
          _a4 = _n.height,
          _b3 = _n.width;

      h.top += _i.top - _i.marginTop, h.bottom = _a4 + _i.top, h.left += _i.left - _i.marginLeft, h.right = _b3 + _i.left;
    } else h = _i;
  }return h.left += e, h.top += e, h.right -= e, h.bottom -= e, h;
}function w(_ref) {
  var a = _ref.width,
      b = _ref.height;
  return a * b;
}function x(a, b, c, d, e) {
  var f = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
  if (-1 === a.indexOf('auto')) return a;var g = v(c, d, f, e),
      h = { top: { width: g.width, height: b.top - g.top }, right: { width: g.right - b.right, height: g.height }, bottom: { width: g.width, height: g.bottom - b.bottom }, left: { width: b.left - g.left, height: g.height } },
      i = Object.keys(h).map(function (a) {
    return o({ key: a }, h[a], { area: w(h[a]) });
  }).sort(function (c, a) {
    return a.area - c.area;
  }),
      j = i.filter(function (_ref2) {
    var a = _ref2.width,
        b = _ref2.height;
    return a >= c.clientWidth && b >= c.clientHeight;
  }),
      k = 0 < j.length ? j[0].key : i[0].key,
      l = a.split('-')[1];return k + (l ? '-' + l : '');
}var y = 'undefined' != typeof window && 'undefined' != typeof document,
    z = ['Edge', 'Trident', 'Firefox'];var A = 0;for (var _a5 = 0; _a5 < z.length; _a5 += 1) {
  if (y && 0 <= navigator.userAgent.indexOf(z[_a5])) {
    A = 1;break;
  }
}function B(a) {
  var b = !1;return function () {
    b || (b = !0, window.Promise.resolve().then(function () {
      b = !1, a();
    }));
  };
}function C(a) {
  var b = !1;return function () {
    b || (b = !0, setTimeout(function () {
      b = !1, a();
    }, A));
  };
}var D = y && window.Promise;var E = D ? B : C;function F(a, b) {
  return Array.prototype.find ? a.find(b) : a.filter(b)[0];
}function G(a, b, c) {
  if (Array.prototype.findIndex) return a.findIndex(function (a) {
    return a[b] === c;
  });var d = F(a, function (a) {
    return a[b] === c;
  });return a.indexOf(d);
}function H(a) {
  var b = void 0;if ('HTML' === a.nodeName) {
    var _n2 = n(),
        _a6 = _n2.width,
        _c2 = _n2.height;

    b = { width: _a6, height: _c2, left: 0, top: 0 };
  } else b = { width: a.offsetWidth, height: a.offsetHeight, left: a.offsetLeft, top: a.offsetTop };return p(b);
}function I(a) {
  var b = getComputedStyle(a),
      c = parseFloat(b.marginTop) + parseFloat(b.marginBottom),
      d = parseFloat(b.marginLeft) + parseFloat(b.marginRight),
      e = { width: a.offsetWidth + d, height: a.offsetHeight + c };return e;
}function J(a) {
  var b = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };return a.replace(/left|right|bottom|top/g, function (a) {
    return b[a];
  });
}function K(a, b, c) {
  c = c.split('-')[0];var d = I(a),
      e = { width: d.width, height: d.height },
      f = -1 !== ['right', 'left'].indexOf(c),
      g = f ? 'top' : 'left',
      h = f ? 'left' : 'top',
      i = f ? 'height' : 'width',
      j = f ? 'width' : 'height';return e[g] = b[g] + b[i] / 2 - d[i] / 2, e[h] = c === h ? b[h] - d[j] : b[J(h)], e;
}function L(a, b, c) {
  var d = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var e = d ? u(b) : i(b, c);return r(c, e, d);
}function M(a) {
  var b = [!1, 'ms', 'Webkit', 'Moz', 'O'],
      c = a.charAt(0).toUpperCase() + a.slice(1);for (var _d3 = 0; _d3 < b.length; _d3++) {
    var _e2 = b[_d3],
        _f = _e2 ? '' + _e2 + c : a;if ('undefined' != typeof document.body.style[_f]) return _f;
  }return null;
}function N(a) {
  return a && '[object Function]' === {}.toString.call(a);
}function O(a, b) {
  return a.some(function (_ref3) {
    var a = _ref3.name,
        c = _ref3.enabled;
    return c && a === b;
  });
}function P(a, b, c) {
  var d = F(a, function (_ref4) {
    var a = _ref4.name;
    return a === b;
  }),
      e = !!d && a.some(function (a) {
    return a.name === c && a.enabled && a.order < d.order;
  });if (!e) {
    var _a7 = '`' + b + '`',
        _d4 = '`' + c + '`';console.warn(_d4 + ' modifier is required by ' + _a7 + ' modifier in order to work, be sure to include it before ' + _a7 + '!');
  }return e;
}function Q(a) {
  return '' !== a && !isNaN(parseFloat(a)) && isFinite(a);
}function R(a) {
  var b = a.ownerDocument;return b ? b.defaultView : window;
}function S(a, b) {
  return R(a).removeEventListener('resize', b.updateBound), b.scrollParents.forEach(function (a) {
    a.removeEventListener('scroll', b.updateBound);
  }), b.updateBound = null, b.scrollParents = [], b.scrollElement = null, b.eventsEnabled = !1, b;
}function T(a, b, c) {
  var d = void 0 === c ? a : a.slice(0, G(a, 'name', c));return d.forEach(function (a) {
    a['function'] && console.warn('`modifier.function` is deprecated, use `modifier.fn`!');var c = a['function'] || a.fn;a.enabled && N(c) && (b.offsets.popper = p(b.offsets.popper), b.offsets.reference = p(b.offsets.reference), b = c(b, a));
  }), b;
}function U(a, b) {
  Object.keys(b).forEach(function (c) {
    var d = b[c];!1 === d ? a.removeAttribute(c) : a.setAttribute(c, b[c]);
  });
}function V(a, b) {
  Object.keys(b).forEach(function (c) {
    var d = '';-1 !== ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(c) && Q(b[c]) && (d = 'px'), a.style[c] = b[c] + d;
  });
}function W(a, b, d, e) {
  var f = 'BODY' === a.nodeName,
      g = f ? a.ownerDocument.defaultView : a;g.addEventListener(b, d, { passive: !0 }), f || W(c(g.parentNode), b, d, e), e.push(g);
}function X(a, b, d, e) {
  d.updateBound = e, R(a).addEventListener('resize', d.updateBound, { passive: !0 });var f = c(a);return W(f, 'scroll', d.updateBound, d.scrollParents), d.scrollElement = f, d.eventsEnabled = !0, d;
}var Y = { computeAutoPlacement: x, debounce: E, findIndex: G, getBordersSize: l, getBoundaries: v, getBoundingClientRect: q, getClientRect: p, getOffsetParent: f, getOffsetRect: H, getOffsetRectRelativeToArbitraryNode: r, getOuterSizes: I, getParentNode: b, getPopperOffsets: K, getReferenceOffsets: L, getScroll: j, getScrollParent: c, getStyleComputedProperty: a, getSupportedPropertyName: M, getWindowSizes: n, isFixed: t, isFunction: N, isModifierEnabled: O, isModifierRequired: P, isNumeric: Q, removeEventListeners: S, runModifiers: T, setAttributes: U, setStyles: V, setupEventListeners: X };exports.computeAutoPlacement = x;
exports.debounce = E;
exports.findIndex = G;
exports.getBordersSize = l;
exports.getBoundaries = v;
exports.getBoundingClientRect = q;
exports.getClientRect = p;
exports.getOffsetParent = f;
exports.getOffsetRect = H;
exports.getOffsetRectRelativeToArbitraryNode = r;
exports.getOuterSizes = I;
exports.getParentNode = b;
exports.getPopperOffsets = K;
exports.getReferenceOffsets = L;
exports.getScroll = j;
exports.getScrollParent = c;
exports.getStyleComputedProperty = a;
exports.getSupportedPropertyName = M;
exports.getWindowSizes = n;
exports.isFixed = t;
exports.isFunction = N;
exports.isModifierEnabled = O;
exports.isModifierRequired = P;
exports.isNumeric = Q;
exports.removeEventListeners = S;
exports.runModifiers = T;
exports.setAttributes = U;
exports.setStyles = V;
exports.setupEventListeners = X;
exports.default = Y;
//# sourceMappingURL=popper-utils.min.js.map